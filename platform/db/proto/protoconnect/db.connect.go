// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: platform/db/proto/db.proto

package protoconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	proto "github.com/mercari/mercari-microservices-example/platform/db/proto"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// DBServiceName is the fully-qualified name of the DBService service.
	DBServiceName = "mercari.mercari_microservices_example.db.DBService"
)

// DBServiceClient is a client for the mercari.mercari_microservices_example.db.DBService service.
type DBServiceClient interface {
	CreateCustomer(context.Context, *connect_go.Request[proto.CreateCustomerRequest]) (*connect_go.Response[proto.CreateCustomerResponse], error)
	GetCustomer(context.Context, *connect_go.Request[proto.GetCustomerRequest]) (*connect_go.Response[proto.GetCustomerResponse], error)
	GetCustomerByName(context.Context, *connect_go.Request[proto.GetCustomerByNameRequest]) (*connect_go.Response[proto.GetCustomerByNameResponse], error)
	CreateItem(context.Context, *connect_go.Request[proto.CreateItemRequest]) (*connect_go.Response[proto.CreateItemResponse], error)
	GetItem(context.Context, *connect_go.Request[proto.GetItemRequest]) (*connect_go.Response[proto.GetItemResponse], error)
	ListItems(context.Context, *connect_go.Request[proto.ListItemsRequest]) (*connect_go.Response[proto.ListItemsResponse], error)
}

// NewDBServiceClient constructs a client for the mercari.mercari_microservices_example.db.DBService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewDBServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) DBServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &dBServiceClient{
		createCustomer: connect_go.NewClient[proto.CreateCustomerRequest, proto.CreateCustomerResponse](
			httpClient,
			baseURL+"/mercari.mercari_microservices_example.db.DBService/CreateCustomer",
			opts...,
		),
		getCustomer: connect_go.NewClient[proto.GetCustomerRequest, proto.GetCustomerResponse](
			httpClient,
			baseURL+"/mercari.mercari_microservices_example.db.DBService/GetCustomer",
			opts...,
		),
		getCustomerByName: connect_go.NewClient[proto.GetCustomerByNameRequest, proto.GetCustomerByNameResponse](
			httpClient,
			baseURL+"/mercari.mercari_microservices_example.db.DBService/GetCustomerByName",
			opts...,
		),
		createItem: connect_go.NewClient[proto.CreateItemRequest, proto.CreateItemResponse](
			httpClient,
			baseURL+"/mercari.mercari_microservices_example.db.DBService/CreateItem",
			opts...,
		),
		getItem: connect_go.NewClient[proto.GetItemRequest, proto.GetItemResponse](
			httpClient,
			baseURL+"/mercari.mercari_microservices_example.db.DBService/GetItem",
			opts...,
		),
		listItems: connect_go.NewClient[proto.ListItemsRequest, proto.ListItemsResponse](
			httpClient,
			baseURL+"/mercari.mercari_microservices_example.db.DBService/ListItems",
			opts...,
		),
	}
}

// dBServiceClient implements DBServiceClient.
type dBServiceClient struct {
	createCustomer    *connect_go.Client[proto.CreateCustomerRequest, proto.CreateCustomerResponse]
	getCustomer       *connect_go.Client[proto.GetCustomerRequest, proto.GetCustomerResponse]
	getCustomerByName *connect_go.Client[proto.GetCustomerByNameRequest, proto.GetCustomerByNameResponse]
	createItem        *connect_go.Client[proto.CreateItemRequest, proto.CreateItemResponse]
	getItem           *connect_go.Client[proto.GetItemRequest, proto.GetItemResponse]
	listItems         *connect_go.Client[proto.ListItemsRequest, proto.ListItemsResponse]
}

// CreateCustomer calls mercari.mercari_microservices_example.db.DBService.CreateCustomer.
func (c *dBServiceClient) CreateCustomer(ctx context.Context, req *connect_go.Request[proto.CreateCustomerRequest]) (*connect_go.Response[proto.CreateCustomerResponse], error) {
	return c.createCustomer.CallUnary(ctx, req)
}

// GetCustomer calls mercari.mercari_microservices_example.db.DBService.GetCustomer.
func (c *dBServiceClient) GetCustomer(ctx context.Context, req *connect_go.Request[proto.GetCustomerRequest]) (*connect_go.Response[proto.GetCustomerResponse], error) {
	return c.getCustomer.CallUnary(ctx, req)
}

// GetCustomerByName calls mercari.mercari_microservices_example.db.DBService.GetCustomerByName.
func (c *dBServiceClient) GetCustomerByName(ctx context.Context, req *connect_go.Request[proto.GetCustomerByNameRequest]) (*connect_go.Response[proto.GetCustomerByNameResponse], error) {
	return c.getCustomerByName.CallUnary(ctx, req)
}

// CreateItem calls mercari.mercari_microservices_example.db.DBService.CreateItem.
func (c *dBServiceClient) CreateItem(ctx context.Context, req *connect_go.Request[proto.CreateItemRequest]) (*connect_go.Response[proto.CreateItemResponse], error) {
	return c.createItem.CallUnary(ctx, req)
}

// GetItem calls mercari.mercari_microservices_example.db.DBService.GetItem.
func (c *dBServiceClient) GetItem(ctx context.Context, req *connect_go.Request[proto.GetItemRequest]) (*connect_go.Response[proto.GetItemResponse], error) {
	return c.getItem.CallUnary(ctx, req)
}

// ListItems calls mercari.mercari_microservices_example.db.DBService.ListItems.
func (c *dBServiceClient) ListItems(ctx context.Context, req *connect_go.Request[proto.ListItemsRequest]) (*connect_go.Response[proto.ListItemsResponse], error) {
	return c.listItems.CallUnary(ctx, req)
}

// DBServiceHandler is an implementation of the mercari.mercari_microservices_example.db.DBService
// service.
type DBServiceHandler interface {
	CreateCustomer(context.Context, *connect_go.Request[proto.CreateCustomerRequest]) (*connect_go.Response[proto.CreateCustomerResponse], error)
	GetCustomer(context.Context, *connect_go.Request[proto.GetCustomerRequest]) (*connect_go.Response[proto.GetCustomerResponse], error)
	GetCustomerByName(context.Context, *connect_go.Request[proto.GetCustomerByNameRequest]) (*connect_go.Response[proto.GetCustomerByNameResponse], error)
	CreateItem(context.Context, *connect_go.Request[proto.CreateItemRequest]) (*connect_go.Response[proto.CreateItemResponse], error)
	GetItem(context.Context, *connect_go.Request[proto.GetItemRequest]) (*connect_go.Response[proto.GetItemResponse], error)
	ListItems(context.Context, *connect_go.Request[proto.ListItemsRequest]) (*connect_go.Response[proto.ListItemsResponse], error)
}

// NewDBServiceHandler builds an HTTP handler from the service implementation. It returns the path
// on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewDBServiceHandler(svc DBServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/mercari.mercari_microservices_example.db.DBService/CreateCustomer", connect_go.NewUnaryHandler(
		"/mercari.mercari_microservices_example.db.DBService/CreateCustomer",
		svc.CreateCustomer,
		opts...,
	))
	mux.Handle("/mercari.mercari_microservices_example.db.DBService/GetCustomer", connect_go.NewUnaryHandler(
		"/mercari.mercari_microservices_example.db.DBService/GetCustomer",
		svc.GetCustomer,
		opts...,
	))
	mux.Handle("/mercari.mercari_microservices_example.db.DBService/GetCustomerByName", connect_go.NewUnaryHandler(
		"/mercari.mercari_microservices_example.db.DBService/GetCustomerByName",
		svc.GetCustomerByName,
		opts...,
	))
	mux.Handle("/mercari.mercari_microservices_example.db.DBService/CreateItem", connect_go.NewUnaryHandler(
		"/mercari.mercari_microservices_example.db.DBService/CreateItem",
		svc.CreateItem,
		opts...,
	))
	mux.Handle("/mercari.mercari_microservices_example.db.DBService/GetItem", connect_go.NewUnaryHandler(
		"/mercari.mercari_microservices_example.db.DBService/GetItem",
		svc.GetItem,
		opts...,
	))
	mux.Handle("/mercari.mercari_microservices_example.db.DBService/ListItems", connect_go.NewUnaryHandler(
		"/mercari.mercari_microservices_example.db.DBService/ListItems",
		svc.ListItems,
		opts...,
	))
	return "/mercari.mercari_microservices_example.db.DBService/", mux
}

// UnimplementedDBServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedDBServiceHandler struct{}

func (UnimplementedDBServiceHandler) CreateCustomer(context.Context, *connect_go.Request[proto.CreateCustomerRequest]) (*connect_go.Response[proto.CreateCustomerResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("mercari.mercari_microservices_example.db.DBService.CreateCustomer is not implemented"))
}

func (UnimplementedDBServiceHandler) GetCustomer(context.Context, *connect_go.Request[proto.GetCustomerRequest]) (*connect_go.Response[proto.GetCustomerResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("mercari.mercari_microservices_example.db.DBService.GetCustomer is not implemented"))
}

func (UnimplementedDBServiceHandler) GetCustomerByName(context.Context, *connect_go.Request[proto.GetCustomerByNameRequest]) (*connect_go.Response[proto.GetCustomerByNameResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("mercari.mercari_microservices_example.db.DBService.GetCustomerByName is not implemented"))
}

func (UnimplementedDBServiceHandler) CreateItem(context.Context, *connect_go.Request[proto.CreateItemRequest]) (*connect_go.Response[proto.CreateItemResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("mercari.mercari_microservices_example.db.DBService.CreateItem is not implemented"))
}

func (UnimplementedDBServiceHandler) GetItem(context.Context, *connect_go.Request[proto.GetItemRequest]) (*connect_go.Response[proto.GetItemResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("mercari.mercari_microservices_example.db.DBService.GetItem is not implemented"))
}

func (UnimplementedDBServiceHandler) ListItems(context.Context, *connect_go.Request[proto.ListItemsRequest]) (*connect_go.Response[proto.ListItemsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("mercari.mercari_microservices_example.db.DBService.ListItems is not implemented"))
}
