// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: services/item/proto/item.proto

package protoconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	proto "github.com/mercari/mercari-microservices-example/services/item/proto"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// ItemServiceName is the fully-qualified name of the ItemService service.
	ItemServiceName = "mercari.mercari_microservices_example.item.ItemService"
)

// ItemServiceClient is a client for the mercari.mercari_microservices_example.item.ItemService
// service.
type ItemServiceClient interface {
	CreateItem(context.Context, *connect_go.Request[proto.CreateItemRequest]) (*connect_go.Response[proto.CreateItemResponse], error)
	GetItem(context.Context, *connect_go.Request[proto.GetItemRequest]) (*connect_go.Response[proto.GetItemResponse], error)
	ListItems(context.Context, *connect_go.Request[proto.ListItemsRequest]) (*connect_go.Response[proto.ListItemsResponse], error)
}

// NewItemServiceClient constructs a client for the
// mercari.mercari_microservices_example.item.ItemService service. By default, it uses the Connect
// protocol with the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed
// requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewItemServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) ItemServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &itemServiceClient{
		createItem: connect_go.NewClient[proto.CreateItemRequest, proto.CreateItemResponse](
			httpClient,
			baseURL+"/mercari.mercari_microservices_example.item.ItemService/CreateItem",
			opts...,
		),
		getItem: connect_go.NewClient[proto.GetItemRequest, proto.GetItemResponse](
			httpClient,
			baseURL+"/mercari.mercari_microservices_example.item.ItemService/GetItem",
			opts...,
		),
		listItems: connect_go.NewClient[proto.ListItemsRequest, proto.ListItemsResponse](
			httpClient,
			baseURL+"/mercari.mercari_microservices_example.item.ItemService/ListItems",
			opts...,
		),
	}
}

// itemServiceClient implements ItemServiceClient.
type itemServiceClient struct {
	createItem *connect_go.Client[proto.CreateItemRequest, proto.CreateItemResponse]
	getItem    *connect_go.Client[proto.GetItemRequest, proto.GetItemResponse]
	listItems  *connect_go.Client[proto.ListItemsRequest, proto.ListItemsResponse]
}

// CreateItem calls mercari.mercari_microservices_example.item.ItemService.CreateItem.
func (c *itemServiceClient) CreateItem(ctx context.Context, req *connect_go.Request[proto.CreateItemRequest]) (*connect_go.Response[proto.CreateItemResponse], error) {
	return c.createItem.CallUnary(ctx, req)
}

// GetItem calls mercari.mercari_microservices_example.item.ItemService.GetItem.
func (c *itemServiceClient) GetItem(ctx context.Context, req *connect_go.Request[proto.GetItemRequest]) (*connect_go.Response[proto.GetItemResponse], error) {
	return c.getItem.CallUnary(ctx, req)
}

// ListItems calls mercari.mercari_microservices_example.item.ItemService.ListItems.
func (c *itemServiceClient) ListItems(ctx context.Context, req *connect_go.Request[proto.ListItemsRequest]) (*connect_go.Response[proto.ListItemsResponse], error) {
	return c.listItems.CallUnary(ctx, req)
}

// ItemServiceHandler is an implementation of the
// mercari.mercari_microservices_example.item.ItemService service.
type ItemServiceHandler interface {
	CreateItem(context.Context, *connect_go.Request[proto.CreateItemRequest]) (*connect_go.Response[proto.CreateItemResponse], error)
	GetItem(context.Context, *connect_go.Request[proto.GetItemRequest]) (*connect_go.Response[proto.GetItemResponse], error)
	ListItems(context.Context, *connect_go.Request[proto.ListItemsRequest]) (*connect_go.Response[proto.ListItemsResponse], error)
}

// NewItemServiceHandler builds an HTTP handler from the service implementation. It returns the path
// on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewItemServiceHandler(svc ItemServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/mercari.mercari_microservices_example.item.ItemService/CreateItem", connect_go.NewUnaryHandler(
		"/mercari.mercari_microservices_example.item.ItemService/CreateItem",
		svc.CreateItem,
		opts...,
	))
	mux.Handle("/mercari.mercari_microservices_example.item.ItemService/GetItem", connect_go.NewUnaryHandler(
		"/mercari.mercari_microservices_example.item.ItemService/GetItem",
		svc.GetItem,
		opts...,
	))
	mux.Handle("/mercari.mercari_microservices_example.item.ItemService/ListItems", connect_go.NewUnaryHandler(
		"/mercari.mercari_microservices_example.item.ItemService/ListItems",
		svc.ListItems,
		opts...,
	))
	return "/mercari.mercari_microservices_example.item.ItemService/", mux
}

// UnimplementedItemServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedItemServiceHandler struct{}

func (UnimplementedItemServiceHandler) CreateItem(context.Context, *connect_go.Request[proto.CreateItemRequest]) (*connect_go.Response[proto.CreateItemResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("mercari.mercari_microservices_example.item.ItemService.CreateItem is not implemented"))
}

func (UnimplementedItemServiceHandler) GetItem(context.Context, *connect_go.Request[proto.GetItemRequest]) (*connect_go.Response[proto.GetItemResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("mercari.mercari_microservices_example.item.ItemService.GetItem is not implemented"))
}

func (UnimplementedItemServiceHandler) ListItems(context.Context, *connect_go.Request[proto.ListItemsRequest]) (*connect_go.Response[proto.ListItemsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("mercari.mercari_microservices_example.item.ItemService.ListItems is not implemented"))
}
